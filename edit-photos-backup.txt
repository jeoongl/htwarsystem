<?php
// Start session and include database connection
session_start();
include 'includes/dbconnection.php';

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header('Location: log-in.php');
    exit();
}

// Retrieve the logged-in user's ID from the session
$user_id = $_SESSION['user_id'];

// Fetch user information
$query = "SELECT fullname, username, email, profile_photo, role_id FROM users_tbl WHERE id = ?";
$stmt = $conn->prepare($query);
$stmt->bind_param("i", $user_id);
$stmt->execute();
$result = $stmt->get_result();
$user = $result->fetch_assoc();

// Set default profile photo if none exists
$profile_photo = !empty($user['profile_photo']) ? $user['profile_photo'] : 'img/default-profile.jpg';
$stmt->close();

// Fetch the business ID for the logged-in user
$businessQuery = "SELECT id FROM businesses_tbl WHERE created_by = ?";
$stmt = $conn->prepare($businessQuery);
$stmt->bind_param("i", $user_id);
$stmt->execute();
$businessResult = $stmt->get_result();
$business = $businessResult->fetch_assoc();
$business_id = $business['id']; // Assuming there's only one business owned by the user
$stmt->close();

// Fetch business photos for the business ID
$photoQuery = "SELECT photo1, photo2, photo3, photo4, photo5, photo6, photo7, photo8, photo9, photo10, photo11, photo12 FROM business_photos_tbl WHERE business_id = ?";
$stmt = $conn->prepare($photoQuery);
$stmt->bind_param("i", $business_id);
$stmt->execute();
$photoResult = $stmt->get_result();
$photos = $photoResult->fetch_assoc();
$stmt->close();

// Check if photos are fetched correctly
if (!$photos) {
    $photos = []; // Ensure $photos is an array
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Photos</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    body {
      font-family: Arial, Helvetica, sans-serif;
      margin: 0;
      padding: 0;
      background-color: black;
      color: white;
    }
    header {
      background-color: green;
      padding: 10px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .logo {
      width: 350px;
    }
    .profile-icon {
            position: relative;
            cursor: pointer;
            color: white;
            font-size: 20px;
        }
        .dropdown-menu {
            display: none;
            position: absolute;
            top: 40px;
            right: 0;
            background-color: #333;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
            border-radius: 8px;
            overflow: hidden;
            width: 150px;
            z-index: 1000;
        }
            /* Adjusted CSS for the name below the profile photo */
        .dropdown-menu div {
            text-align: center;
            padding: 10px 0; /* Reduced padding */
            background-color: #444;
        }
        .dropdown-menu div p {
            font-size: 20px;
            margin: 5px 0; /* Reduced margin for name */
        }
        
        /* Add margin at the top of the profile photo */
        .dropdown-menu div img {
            margin-top: 5px; /* Increased top space for the photo */
        }
        .dropdown-menu a {
            display: flex;
            align-items: center;
            padding: 10px;
            color: white;
            text-decoration: none;
            background-color: #333;
            border-bottom: 1px solid #444;
            font-size: 14px;
        }
        .dropdown-menu a:hover {
            background-color: #444;
        }
        .dropdown-menu i {
            margin-right: 10px;
        }
    .container {
      background-color: #222;
      padding: 20px;
      margin: 20px;
      border-radius: 10px;
      max-width: 800px;
      margin-left: auto;
      margin-right: auto;
      text-align: left;
    }
    .container h2 {
      margin-top: 0;
      font-size: 1.5em;
      color: #ccc;
    }
    .container p {
      color: #ccc;
      font-size: 1em;
      margin-top: 5px;
    }
    .photo-box {
      background-color: #333;
      padding: 20px;
      border-radius: 10px;
      margin-top: 20px;
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      align-items: center;
    }
    .photo-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      width: 100%;
      justify-content: flex-start;
    }
    .photo-item {
      position: relative;
      width: 175px;
      height: 175px;
      border-radius: 10px;
      overflow: hidden;
      margin-bottom: 10px;
    }
    .photo-item img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    .remove-button {
      position: absolute;
      top: 0;
      right: 0;
      background-color: red;
      border: none;
      color: white;
      border-radius: 50%;
      width: 25px;
      height: 25px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
    .upload-button {
      width: 175px;
      height: 175px;
      border: 2px dashed grey;
      border-radius: 10px;
      background-color: transparent;
      color: grey;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 16px;
      flex-direction: column;
      margin-bottom: 10px;
    }
    .upload-button:hover {
      background-color: #444;
    }
    .upload-button i {
      font-size: 24px;
      margin-bottom: 5px;
    }
    #file-input {
      display: none;
    }
    .button-group {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
      margin-top: 20px;
    }
    .button-group button {
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
      width: 150px; /* Set width to 150px to match the previous design */
      text-align: center;
    }
    .cancel-button {
      background-color: #444;
      color: white;
    }
    .cancel-button:hover {
      background-color: #555;
    }
    .upload-button-green {
      background-color: green;
      color: white;
    }
    .upload-button-green:hover {
      background-color: darkgreen;
    }
  </style>
  <script>
    let selectedFiles = [];

    function toggleDropdown() {
        const dropdown = document.getElementById("dropdown-menu");
        // Toggle dropdown display
        if (dropdown.style.display === "block") {
            dropdown.style.display = "none";
        } else {
            dropdown.style.display = "block";
        }
        }

        // Close dropdown when clicking outside
        window.onclick = function(event) {
        const dropdown = document.getElementById("dropdown-menu");
        // If the click is outside the profile-icon and dropdown menu
        if (!event.target.closest('.profile-icon') && !event.target.closest('.dropdown-menu')) {
            if (dropdown.style.display === "block") {
            dropdown.style.display = "none";
            }
        }
        }

        // Prevent dropdown from closing when clicking inside the dropdown menu
        document.getElementById("dropdown-menu").addEventListener("click", function(event) {
        event.stopPropagation();
        });

    function handleFileSelect(event) {
        const files = event.target.files;
        const photoGrid = document.querySelector('.photo-grid');
        const maxPhotos = 12;
        const existingPhotos = photoGrid.children.length - 1; // Subtract 1 for the upload button

        if (existingPhotos + files.length > maxPhotos) {
            alert(`You can only upload a maximum of ${maxPhotos} photos.`);
            return;
        }

        Array.from(files).forEach((file, index) => {
            if (existingPhotos + photoGrid.children.length - 1 >= maxPhotos) return;
            if (selectedFiles.includes(file.name)) {
                alert(`The file "${file.name}" has already been selected.`);
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                const photoItem = document.createElement('div');
                photoItem.classList.add('photo-item');

                const img = document.createElement('img');
                img.src = e.target.result;

                const removeButton = document.createElement('button');
                removeButton.classList.add('remove-button');
                removeButton.innerHTML = '&times;';
                removeButton.onclick = function() {
                    photoGrid.removeChild(photoItem);
                    selectedFiles = selectedFiles.filter(fileName => fileName !== file.name);
                    updateSelectedPhotosCount();
                    resetFileInput(); // Reset the file input to allow selecting the same file again
                };

                photoItem.appendChild(img);
                photoItem.appendChild(removeButton);
                photoGrid.insertBefore(photoItem, document.querySelector('.upload-button'));

                // Add the file name to the selectedFiles array
                selectedFiles.push(file.name);

                // Update the count after the last file is processed
                if (index === files.length - 1) {
                    updateSelectedPhotosCount();
                }
            }
            reader.readAsDataURL(file);
        });
    }

    function updateSelectedPhotosCount() {
        const photoItems = document.querySelectorAll('.photo-item');
        const selectedPhotosCountElement = document.getElementById('selected-photos');
        selectedPhotosCountElement.textContent = `Selected photos: ${photoItems.length}`;
    }

    function resetFileInput() {
        const fileInput = document.getElementById('file-input');
        fileInput.value = ''; // Clear the file input value to allow re-selection of the same file
    }

    function openFileDialog() {
        document.getElementById('file-input').click();
    }
    

    function populatePhotos() {
    const photoGrid = document.querySelector('.photo-grid');
    const existingPhotos = <?php echo json_encode($photos); ?>;

    Object.values(existingPhotos).forEach((photo, index) => {
        if (photo) {
            const photoItem = document.createElement('div');
            photoItem.classList.add('photo-item');

            const img = document.createElement('img');
            img.src = photo;

            const removeButton = document.createElement('button');
            removeButton.classList.add('remove-button');
            removeButton.innerHTML = '&times;';
            removeButton.onclick = function() {
                deletePhoto(index + 1);  // Pass the photo column number (e.g., 1 for photo1)
            };

            photoItem.appendChild(img);
            photoItem.appendChild(removeButton);
            photoGrid.insertBefore(photoItem, document.querySelector('.upload-button'));
        }
    });
}

function uploadPhotos() {
    const formData = new FormData();

    // Append each selected file to the formData
    selectedFiles.forEach(file => {
        formData.append('photos[]', file);
    });

    const xhr = new XMLHttpRequest();
    xhr.open('POST', 'upload-business-photos.php', true);
    xhr.onload = function() {
        if (xhr.status === 200) {
            alert('Photos uploaded successfully');
            location.reload();  // Reload the page to reflect the updated photos
        } else {
            alert('Error uploading photos');
        }
    };
    xhr.send(formData);
}



function deletePhoto(photoIndex) {
    if (confirm('Are you sure you want to delete this photo?')) {
        const xhr = new XMLHttpRequest();
        xhr.open('POST', 'delete-business-photo.php', true);
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        xhr.onload = function() {
            if (xhr.status === 200) {
                alert('Photo deleted successfully');
                location.reload();  // Reload to update the photo grid
            } else {
                alert('Error deleting photo');
            }
        };
        xhr.send('photoIndex=' + photoIndex);
    }
}

function handleFileSelect(event) {
    const files = event.target.files;
    const photoGrid = document.querySelector('.photo-grid');
    const maxPhotos = 12;
    const existingPhotos = photoGrid.children.length - 1; // Subtract 1 for the upload button

    if (existingPhotos + files.length > maxPhotos) {
        alert(`You can only upload a maximum of ${maxPhotos} photos.`);
        return;
    }

    Array.from(files).forEach((file, index) => {
        if (existingPhotos + photoGrid.children.length - 1 >= maxPhotos) return;

        const reader = new FileReader();
        reader.onload = function(e) {
            const photoItem = document.createElement('div');
            photoItem.classList.add('photo-item');

            const img = document.createElement('img');
            img.src = e.target.result;

            const removeButton = document.createElement('button');
            removeButton.classList.add('remove-button');
            removeButton.innerHTML = '&times;';
            removeButton.onclick = function() {
                photoGrid.removeChild(photoItem);
                selectedFiles = selectedFiles.filter(fileName => fileName !== file.name);
            };

            photoItem.appendChild(img);
            photoItem.appendChild(removeButton);
            photoGrid.insertBefore(photoItem, document.querySelector('.upload-button'));

            selectedFiles.push(file);
        }
        reader.readAsDataURL(file);
    });
}

function uploadPhotos() {
    const formData = new FormData();
    selectedFiles.forEach(file => {
        formData.append('photos[]', file);
    });

    const xhr = new XMLHttpRequest();
    xhr.open('POST', 'upload-business-photos.php', true);
    xhr.onload = function() {
        if (xhr.status === 200) {
            alert('Photos uploaded successfully');
            location.reload();  // Reload to update the photo grid
        } else {
            alert('Error uploading photos');
        }
    };
    xhr.send(formData);
}

document.addEventListener('DOMContentLoaded', populatePhotos);
  </script>
</head>
<body>
<header>
    <img class="logo" src="img/logo.png" alt="Logo">
    <div class="profile-icon" onclick="toggleDropdown()">
      <img src="<?php echo htmlspecialchars($profile_photo); ?>" alt="Profile Photo" style="width: 40px; height: 40px; border-radius: 50%;">
      <div class="dropdown-menu" id="dropdown-menu">
        <div>
          <img src="<?php echo htmlspecialchars($profile_photo); ?>" alt="Profile Photo" style="width: 60px; height: 60px; border-radius: 50%;">
          <p><?php echo htmlspecialchars($user['fullname']); ?></p>
        </div>
        <a href="business-owner-login-index.php"><i class="fas fa-home"></i> Home</a>
        <a href="business-owner-profile-page.php"><i class="fas fa-user"></i> My Account</a>
        <a href="index.php"><i class="fas fa-sign-out-alt"></i> Logout</a>
      </div>
    </div>
</header>

<div class="container">
    <h2>Edit Business Photos</h2>
    <p id="selected-photos">Selected photos: 0</p>
    <div class="photo-grid">
        <!-- Placeholder for uploaded photos -->
        <div class="upload-button" onclick="openFileDialog()">
            <i class="fas fa-plus"></i>
            <span>Upload Photo</span>
        </div>
    </div>
    <input type="file" id="file-input" multiple accept="image/*" onchange="handleFileSelect(event)" style="display: none;">
    <div class="button-group">
        <button class="cancel-button">Cancel</button>
        <button class="upload-button-green" onclick="uploadPhotos()">Upload</button>
    </div>
</div>
    
</body>
</html>
